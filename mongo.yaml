# Deployments

# A Deployment manages a set of Pods to run an application workload, usually one that doesn't maintain state.
# A Deployment provides declarative updates for Pods and ReplicaSets.

# You describe a desired state in a Deployment, and the Deployment Controller changes the actual state to the desired state at a controlled rate. You can define Deployments to create new ReplicaSets, or to remove existing Deployments and adopt all their resources with new Deployments.

# Note:
# Do not manage ReplicaSets owned by a Deployment. Consider opening an issue in the main Kubernetes repository if your use case is not covered below.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongodb
          image: mongo
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef: # from the secret yaml
                  name: mongodb-secret
                  key: mongo-root-user
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-password
          resources:
            requests:
              memory: '64Mi'
              cpu: '250m'
            limits:
              memory: '128Mi'
              cpu: '500m'
---
# Service

# Expose an application running in your cluster behind a single outward-facing endpoint, even when the workload is split across multiple backends.

# In Kubernetes, a Service is a method for exposing a network application that is running as one or more Pods in your cluster.

apiVersion: v1
kind: Service
metadata:
  name: mongo-service # same name in mongo-config, mongo-url
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
